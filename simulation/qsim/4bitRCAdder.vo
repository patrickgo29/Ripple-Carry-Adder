// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 32-bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "01/20/2015 21:05:44"

// 
// Device: Altera EP4CGX15BF14C6 Package FBGA169
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module fourbitRCAdder (
	A,
	B,
	sum,
	carry);
input 	[3:0] A;
input 	[3:0] B;
output 	[3:0] sum;
output 	carry;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \sum[0]~output_o ;
wire \sum[1]~output_o ;
wire \sum[2]~output_o ;
wire \sum[3]~output_o ;
wire \carry~output_o ;
wire \A[0]~input_o ;
wire \B[0]~input_o ;
wire \Fadder1|w1~combout ;
wire \A[1]~input_o ;
wire \B[1]~input_o ;
wire \Fadder2|S~0_combout ;
wire \A[2]~input_o ;
wire \B[2]~input_o ;
wire \Fadder2|comb~0_combout ;
wire \Fadder3|S~0_combout ;
wire \B[3]~input_o ;
wire \A[3]~input_o ;
wire \Fadder3|comb~0_combout ;
wire \Fadder4|S~combout ;
wire \Fadder4|comb~0_combout ;


cycloneiv_io_obuf \sum[0]~output (
	.i(\Fadder1|w1~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\sum[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \sum[0]~output .bus_hold = "false";
defparam \sum[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_obuf \sum[1]~output (
	.i(\Fadder2|S~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\sum[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \sum[1]~output .bus_hold = "false";
defparam \sum[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_obuf \sum[2]~output (
	.i(\Fadder3|S~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\sum[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \sum[2]~output .bus_hold = "false";
defparam \sum[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_obuf \sum[3]~output (
	.i(\Fadder4|S~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\sum[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \sum[3]~output .bus_hold = "false";
defparam \sum[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_obuf \carry~output (
	.i(\Fadder4|comb~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\carry~output_o ),
	.obar());
// synopsys translate_off
defparam \carry~output .bus_hold = "false";
defparam \carry~output .open_drain_output = "false";
// synopsys translate_on

cycloneiv_io_ibuf \A[0]~input (
	.i(A[0]),
	.ibar(gnd),
	.o(\A[0]~input_o ));
// synopsys translate_off
defparam \A[0]~input .bus_hold = "false";
defparam \A[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_io_ibuf \B[0]~input (
	.i(B[0]),
	.ibar(gnd),
	.o(\B[0]~input_o ));
// synopsys translate_off
defparam \B[0]~input .bus_hold = "false";
defparam \B[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_lcell_comb \Fadder1|w1 (
// Equation(s):
// \Fadder1|w1~combout  = \A[0]~input_o  $ (\B[0]~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\A[0]~input_o ),
	.datad(\B[0]~input_o ),
	.cin(gnd),
	.combout(\Fadder1|w1~combout ),
	.cout());
// synopsys translate_off
defparam \Fadder1|w1 .lut_mask = 16'h0FF0;
defparam \Fadder1|w1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_io_ibuf \A[1]~input (
	.i(A[1]),
	.ibar(gnd),
	.o(\A[1]~input_o ));
// synopsys translate_off
defparam \A[1]~input .bus_hold = "false";
defparam \A[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_io_ibuf \B[1]~input (
	.i(B[1]),
	.ibar(gnd),
	.o(\B[1]~input_o ));
// synopsys translate_off
defparam \B[1]~input .bus_hold = "false";
defparam \B[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_lcell_comb \Fadder2|S~0 (
// Equation(s):
// \Fadder2|S~0_combout  = \A[1]~input_o  $ (\B[1]~input_o  $ (((\A[0]~input_o  & \B[0]~input_o ))))

	.dataa(\A[0]~input_o ),
	.datab(\B[0]~input_o ),
	.datac(\A[1]~input_o ),
	.datad(\B[1]~input_o ),
	.cin(gnd),
	.combout(\Fadder2|S~0_combout ),
	.cout());
// synopsys translate_off
defparam \Fadder2|S~0 .lut_mask = 16'h8778;
defparam \Fadder2|S~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_io_ibuf \A[2]~input (
	.i(A[2]),
	.ibar(gnd),
	.o(\A[2]~input_o ));
// synopsys translate_off
defparam \A[2]~input .bus_hold = "false";
defparam \A[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_io_ibuf \B[2]~input (
	.i(B[2]),
	.ibar(gnd),
	.o(\B[2]~input_o ));
// synopsys translate_off
defparam \B[2]~input .bus_hold = "false";
defparam \B[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_lcell_comb \Fadder2|comb~0 (
// Equation(s):
// \Fadder2|comb~0_combout  = (\A[1]~input_o  & ((\B[1]~input_o ) # ((\B[0]~input_o  & \A[0]~input_o )))) # (!\A[1]~input_o  & (\B[0]~input_o  & (\A[0]~input_o  & \B[1]~input_o )))

	.dataa(\B[0]~input_o ),
	.datab(\A[0]~input_o ),
	.datac(\A[1]~input_o ),
	.datad(\B[1]~input_o ),
	.cin(gnd),
	.combout(\Fadder2|comb~0_combout ),
	.cout());
// synopsys translate_off
defparam \Fadder2|comb~0 .lut_mask = 16'hF880;
defparam \Fadder2|comb~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_lcell_comb \Fadder3|S~0 (
// Equation(s):
// \Fadder3|S~0_combout  = \A[2]~input_o  $ (\B[2]~input_o  $ (\Fadder2|comb~0_combout ))

	.dataa(\A[2]~input_o ),
	.datab(\B[2]~input_o ),
	.datac(\Fadder2|comb~0_combout ),
	.datad(gnd),
	.cin(gnd),
	.combout(\Fadder3|S~0_combout ),
	.cout());
// synopsys translate_off
defparam \Fadder3|S~0 .lut_mask = 16'h9696;
defparam \Fadder3|S~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_io_ibuf \B[3]~input (
	.i(B[3]),
	.ibar(gnd),
	.o(\B[3]~input_o ));
// synopsys translate_off
defparam \B[3]~input .bus_hold = "false";
defparam \B[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_io_ibuf \A[3]~input (
	.i(A[3]),
	.ibar(gnd),
	.o(\A[3]~input_o ));
// synopsys translate_off
defparam \A[3]~input .bus_hold = "false";
defparam \A[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneiv_lcell_comb \Fadder3|comb~0 (
// Equation(s):
// \Fadder3|comb~0_combout  = (\A[2]~input_o  & ((\B[2]~input_o ) # (\Fadder2|comb~0_combout ))) # (!\A[2]~input_o  & (\B[2]~input_o  & \Fadder2|comb~0_combout ))

	.dataa(\A[2]~input_o ),
	.datab(\B[2]~input_o ),
	.datac(\Fadder2|comb~0_combout ),
	.datad(gnd),
	.cin(gnd),
	.combout(\Fadder3|comb~0_combout ),
	.cout());
// synopsys translate_off
defparam \Fadder3|comb~0 .lut_mask = 16'hE8E8;
defparam \Fadder3|comb~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_lcell_comb \Fadder4|S (
// Equation(s):
// \Fadder4|S~combout  = \B[3]~input_o  $ (\A[3]~input_o  $ (\Fadder3|comb~0_combout ))

	.dataa(\B[3]~input_o ),
	.datab(\A[3]~input_o ),
	.datac(\Fadder3|comb~0_combout ),
	.datad(gnd),
	.cin(gnd),
	.combout(\Fadder4|S~combout ),
	.cout());
// synopsys translate_off
defparam \Fadder4|S .lut_mask = 16'h9696;
defparam \Fadder4|S .sum_lutc_input = "datac";
// synopsys translate_on

cycloneiv_lcell_comb \Fadder4|comb~0 (
// Equation(s):
// \Fadder4|comb~0_combout  = (\B[3]~input_o  & ((\A[3]~input_o ) # (\Fadder3|comb~0_combout ))) # (!\B[3]~input_o  & (\A[3]~input_o  & \Fadder3|comb~0_combout ))

	.dataa(\B[3]~input_o ),
	.datab(\A[3]~input_o ),
	.datac(\Fadder3|comb~0_combout ),
	.datad(gnd),
	.cin(gnd),
	.combout(\Fadder4|comb~0_combout ),
	.cout());
// synopsys translate_off
defparam \Fadder4|comb~0 .lut_mask = 16'hE8E8;
defparam \Fadder4|comb~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign sum[0] = \sum[0]~output_o ;

assign sum[1] = \sum[1]~output_o ;

assign sum[2] = \sum[2]~output_o ;

assign sum[3] = \sum[3]~output_o ;

assign carry = \carry~output_o ;

endmodule
